# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy csproj and restore dependencies
COPY ["NexusHome.IoT.csproj", "."]
RUN dotnet restore "NexusHome.IoT.csproj"

# Copy source code
COPY . .

# Build the application
RUN dotnet build "NexusHome.IoT.csproj" -c Release -o /app/build

# Publish stage
FROM build AS publish
RUN dotnet publish "NexusHome.IoT.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Final runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Create non-root user for security
RUN groupadd -r nexusapp && useradd --no-log-init -r -g nexusapp nexusapp

# Install required packages
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy published application
COPY --from=publish /app/publish .

# Create required directories and set permissions
RUN mkdir -p /app/logs /app/data /app/uploads /app/certificates && \
    chown -R nexusapp:nexusapp /app && \
    chmod -R 755 /app

# Switch to non-root user
USER nexusapp

# Environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80
ENV DOTNET_EnableDiagnostics=0
ENV DOTNET_gcServer=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health/ready || exit 1

# Expose ports
EXPOSE 80
EXPOSE 443

# Entry point
ENTRYPOINT ["dotnet", "NexusHome.IoT.dll"]
