# NexusHome IoT Smart Home Energy Management System
# Multi-stage Docker build for production deployment

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Install Node.js for frontend build tools
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs

# Copy csproj files and restore dependencies
COPY ["NexusHome.IoT.csproj", "."]
RUN dotnet restore "NexusHome.IoT.csproj"

# Copy source code
COPY . .

# Build the application
WORKDIR "/src"
RUN dotnet build "NexusHome.IoT.csproj" -c Release -o /app/build

# Publish stage
FROM build AS publish
RUN dotnet publish "NexusHome.IoT.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app

# Install required system packages
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates \
    gnupg \
    lsb-release \
    libc6-dev \
    libgdiplus \
    libx11-dev \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r nexushome && useradd -r -g nexushome nexushome

# Set up directories and permissions
RUN mkdir -p /app/logs /app/data /app/certificates /app/models /app/temp && \
    chown -R nexushome:nexushome /app

# Expose ports
EXPOSE 80
EXPOSE 443
EXPOSE 1883
EXPOSE 8883

# Copy published app
COPY --from=publish /app/publish .
RUN chown -R nexushome:nexushome /app

# Copy additional configuration files
COPY ["appsettings.json", "."]
COPY ["appsettings.Production.json", "."]

# Set environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80;https://+:443
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_USE_POLLING_FILE_WATCHER=true
ENV ASPNETCORE_FORWARDEDHEADERS_ENABLED=true

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Switch to non-root user
USER nexushome

# Set entry point
ENTRYPOINT ["dotnet", "NexusHome.IoT.dll"]

# Build arguments for CI/CD
ARG BUILD_VERSION=2.0.0
ARG BUILD_DATE
ARG BUILD_COMMIT

# Labels for Docker image metadata
LABEL org.label-schema.name="NexusHome IoT" \
      org.label-schema.description="Smart Home Energy Management System with AI-powered IoT integration" \
      org.label-schema.version=$BUILD_VERSION \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vcs-ref=$BUILD_COMMIT \
      org.label-schema.vendor="NexusHome Team" \
      org.label-schema.schema-version="1.0" \
      maintainer="nexushome@example.com"